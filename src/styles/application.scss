@import '~crds-styles/assets/stylesheets/bootstrap';

// Map labels
.pin-label {
  $map-label-font-size: 13px;
  $map-label-font-family: $condensed-font-face;
  $map-label-default-color: $cr-gray;
  $map-label-me-color: $cr-gold;
  $map-label-host-color: $cr-cyan;
  $map-label-person-color: $cr-blue;
  $map-label-site-color: $cr-orange;

  color: $map-label-default-color;
  font-size: $map-label-font-size;

  &.person {
    color: $map-label-person-color;
  }

  &.person,
  &.gathering {
    &.me {
      color: $map-label-me-color;

      &::after {
        content: "ME";
        font-size: 8px;
      }
    }

    &.host {
      color: $map-label-host-color;

      &::after {
        content: "HOST";
        font-size: 8px;
      }
    }
  }

  &.site {
    color: $map-label-site-color;
  }
}


.dark-theme {
  background: lighten($cr-gray-darker, .75);
}

app-preloader {
  display: none;
  .loading & {
    display: block;
  }
}

.outlet-wrapper {
  display: block;
  .loading & {
    display: none;
  }
}

app-neighbors {
  display: block;
  background: $cr-gray-lighter;
}

// Add me to map
app-add-me-to-map {
  background-color: darken($cr-blue, 20);
  color: $cr-white;
  display: block;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 5;
}

.fauxdal {
  background-color: darken($cr-blue, 20);
  color: $cr-white;
  display: block;
  height: 100vh;
  width: 100vw;
  overflow: scroll;

  // Added so the "modal" sits on top of the header
  position: absolute;
  top: 0;
  left: 0;
  z-index: 7;

  .close {
    opacity: 1.0;

    position: absolute;
    top: 1rem;
    right: 1rem;

    a {
      color: $cr-white;

      display: block;
      padding: 1rem;
      margin: -1rem;

      &:hover {
        color: rgba($cr-white, .5);
      }
    }
  }

  .page-footer {
    display: flex;
    justify-content: center;
    align-items: center;

    &.page-footer-vertical {
      flex-direction: column;
    }
  }

  &.fauxdal-center {
    align-items: center;
    display: flex;
    justify-content: center;
    padding-top: 3rem;
  }

  &.fauxdal-fullscreen {
    @media (min-width: $screen-xs) {
      padding-top: initial;
    }

    .container-fluid {
      background-color: darken($cr-blue, 20);
      padding-top: 1rem;
      padding-bottom: 1rem;

      address-form {
        display: block;
        margin: 0 auto;
        padding-top: 1rem;
        width: 100%;
      }

      crds-content-block {
        display: block;
        margin: 0 auto;
        text-align: center;
      }

      .alert,
      .alert crds-content-block {
        text-align: left;
      }

      @media (min-width: $screen-xs) {
        padding: 2rem;

        crds-content-block {
          width: 450px;
        }
        .alert crds-content-block {
          width: auto;
        }

        address-form {
          width: 400px;
        }
      }

      @media (min-width: $screen-sm) {
        crds-content-block {
          width: 475px;
        }
        .alert crds-content-block {
          width: auto;
        }

        address-form {
          width: 425px;
        }
      }

      @media (min-width: $screen-md) {
        crds-content-block {
          width: 500px;
        }
        .alert crds-content-block {
          width: auto;
        }
      }
    }
  }

  .title {
    color: $cr-white;
  }
}

.app-header {
  position: relative;
  z-index: 5;

  .brand-bar {
    position: relative;
    height: 40px;
    overflow: hidden;
    background-image: url('//crds-cms-uploads.s3.amazonaws.com/connect/brandbanner-bg.jpg');
    background-repeat: repeat-x;
    background-size: auto 100%;
  }

  .app-logo {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    padding: 11.5px;
    line-height: 1;
    color: $cr-white;
    background-image: url('//crds-cms-uploads.s3.amazonaws.com/connect/brandbanner-logo-bg.jpg');
    background-size: cover;
    background-repeat: no-repeat;
    svg {
      width: 75px;
      height: 15px;
      padding: 0;
    }
  }

  .page-title {
    text-align: center;
    padding: 1rem;
    background-color: darken(desaturate($cr-blue-dark, 5), 5);

    * {
      color: $cr-white;
    }

    a {
      margin-top: 0.25rem;
    }

    h1 {
      display: inline-block;
      margin: 0 auto;
      line-height: 1;
      font-size: 1.5rem;
    }
  }
}

// Centers blocks to the middle of the screen.
.content-middle {
  @include container-fixed();
  max-width: $container-tablet;
  width: 100%;
}

// Map searchbar
app-search-bar {
  display: flex;
  position: relative;
  z-index: 5;
  justify-content: flex-start;
  padding: .5rem 1rem;
  background-color: darken(desaturate($cr-blue-dark, 5), 5);

  > div {
    display: flex;
    justify-content: flex-start;

    @media (min-width: $screen-sm) {
      margin: 0 auto;
      padding: 0 2rem;
      width: $container-tablet;
    }

    > button {
      margin-left: 6px;
    }
  }


  .input-group {
    display: inline-flex;
    width: calc(100% - 90px);
    margin-right: 1rem;

    .input-group-btn {
      width: initial;
    }

    @media (min-width: $screen-xs) {
      flex-grow: 0;
    }

    button.btn {
      padding-right: 10px;
      padding-left: 10px;
      width: 70px;

      @media (min-width: $screen-xs) {
        padding-right: 20px;
        padding-left: 20px;
      }
    }
  }

  input[placeholder] {
    text-overflow: ellipsis;
  }

  // Remove validation
  input.form-control.ng-touched {
    &.ng-valid,
    &.ng-invalid {
      border-color: $input-border;
      box-shadow: inset 0 0 0 1px $input-border;

      &:focus {
      border-color: $input-border-focus;
      box-shadow: inset 0 0 0 1px rgba($input-border-focus, 0.5);
      }
    }
  }
}

app-map,
sebm-google-map,
canvas-map-overlay {
  // Calculations are designed such that while the screen is less than 3000px
  // tall, the map is never too short, but also never more than 99px below
  // the bottom of the screen directly within Connect.
  //
  // When displayed as a microclient, it may fall another 54px-64px below
  // the footer, accounting for the global header.
  height: 381px;
  @for $idx from 5 to 30 {
    $height: $idx * 100;
    @media screen and ( min-height: #{$height}px ){
      height: #{$height - 19}px;
    }
  }
}

// Style map
app-map {
  display: block;
  overflow: hidden;
  position: relative;
}

sebm-google-map {
  @media (min-width: $screen-xs) {
    .gmnoprint {
      padding: .5rem;
    }
  }
}

canvas-map-overlay {
  display: block;
  pointer-events: none;
  position: absolute;
  width: 100vw;
  z-index: 1;
}

// Fix map error overlay
.gm-style .gm-style-pbc {
  z-index: 1050 !important;
}

// Map footer
app-map-footer {
  position: absolute;
  width: 0;
  height: 0;
  top: 5px;
  right: 1rem;
  z-index: 4;
  @media (min-width: $screen-xs) {
    top: 13px;
  }
  input {
    float: right;
    clear: both;
  }
}

// Getting started layout
.people {
  display: flex;
  flex-flow: column nowrap;
  margin-top: 1rem;

  @media (min-width: $screen-xs) {
    flex-direction: row;
  }

  .person {
    flex: 1 1 auto;
    text-align: center;

    align-items: center;
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;

    &::last-child {
      padding-top: 1rem;
    }

    .entry-header {
      justify-content: center;
    }
  }
}

app-pin-detail {
  display: block;
  background: $cr-gray-lighter;
  height: 381px;
  @for $idx from 5 to 30 {
    $height: $idx * 100;
    @media screen and ( min-height: #{$height}px ){
      height: #{$height - 19}px;
    }
  }

  .pin-details {
    background: $cr-black;
    color: $cr-gray-light;
    display: block;
    padding-top: 1rem;
    padding-bottom: 1rem;
    @for $idx from 5 to 30 {
      $height: $idx * 100;
      @media screen and ( min-height: #{$height}px ){
        height: #{$height - 19}px;
      }
    }

    .title {
      color: $cr-white;
    }

    @media (min-width: $screen-sm) {
      box-shadow: 0 0 10px 0 $cr-gray-light;
      margin: 0 auto;
      padding: 1rem 2rem;
      width: $container-tablet;
    }

    &.is-gathering {
      border-top: 1px solid $cr-gray-dark;
      border-bottom: 1px solid $cr-gray-dark;
    }

    p {
      color: $cr-gray-light;
    }
  }
}

.pin-detail-header {
  border-top: 1px solid $cr-gray-dark;
  border-bottom: 1px solid $cr-gray-dark;
  padding: 20px 0;
}

//   h1 {
//     @extend .component-header;
//     font-size: $font-size-h1;
//     color: $cr-white;
//     margin-top: 0;
//     margin-bottom: 0;
//     padding-bottom: 0;
//   }

//   .pin-detail-name {
//     text-align: left;

//     .label {
//       float: none;
//     }
//   }

//   .pin-detail-image {
//     float: left;
//     padding-right: 10px;

//     img {
//       border: 2px solid $cr-gray-dark;
//     }
//   }
// }

gathering {
  p {
    padding: 20px 0;
    margin: 0;
  }

  .btn {
    background: $cr-cyan;
    color: $cr-white;
  }
}

say-hi {
  display: inline-block;

  p {
    padding: 20px 0;
    margin: 0;
  }

  .btn {
    background: $cr-gray-dark;
    color: $cr-white;
  }

  .btn-say-hi {
    background: $cr-cyan;
    color: $cr-white;
  }
}

readonly-address {
  font-weight: bold;
  font-size: 12px;
  text-transform: uppercase;

  p {
    padding: 0;
    margin: 0;
  }

  .pin-address-city {
    margin-bottom: 0;
  }
}

// Update search results button
search-local {
  display: block;
  position: absolute;
  top: 85px;
  right: 1rem;
  z-index: 4;

  @media (min-width: $screen-xs) {
    top: 93px;
  }
}

// Profile picture fix (connect-specific?)
.profile-picture {
  position: relative;

  .entry & {
    display: inline-flex;
    flex-direction: row-reverse;
    // margin-right: 1rem;
    width: 85px;
  }

  .pin-detail-header & {
    float: left;
    margin-right: 1rem;
  }

  .img-circle {
    border-style: solid;
    border-width: 2px;

    .entry & {
      border-color: $cr-gray-lighter;
    }

    .pin-detail-header & {
      border-color: $cr-gray;
    }
  }
}

.profile-picture-default {
  background-image: url("//crossroads-media.imgix.net/images/avatar.svg");
  background-position: center;
  background-size: cover;
}

.profile-picture-overlay {
  background-position: center;
  background-size: cover;
  position: absolute;
  top: 0;
  right: 0;
}

@for $i from 1 through 6 {
  .img-size-#{$i} {
    $dimensions: 16px;

    height: $dimensions * $i;
    width: $dimensions * $i;
  }
}

.btn-toggle {
  &,
  &:active,
  &:active:focus,
  &:focus,
  &:hover {
    background-color: $btn-secondary-bg;
    border-color: darken($btn-secondary-border, 5);
    box-shadow: none;
  }

  &.btn-primary {
    &,
    &:active,
    &:active:focus,
    &:focus,
    &:hover {
      background: $btn-primary-bg;
      border-color: $btn-primary-border;
      box-shadow: none;
    }
  }
}




// 🚨 Temp fix - Need higher contrast for active states on btns (to be revisited).
.btn.btn-primary.active {
  background: darken($btn-primary-bg, 20);
}